{
  "_args": [
    [
      {
        "raw": "db",
        "scope": null,
        "escapedName": "db",
        "name": "db",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\nodejs App\\app"
    ]
  ],
  "_from": "db@latest",
  "_id": "db@1.0.6",
  "_inCache": true,
  "_location": "/db",
  "_npmUser": {
    "name": "sleeplessinc",
    "email": "joe@sleepless.com"
  },
  "_npmVersion": "1.2.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "db",
    "scope": null,
    "escapedName": "db",
    "name": "db",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/db/-/db-1.0.6.tgz",
  "_shasum": "620022e7aa4a0dc19f4f84d5da79e7096fe77d0e",
  "_shrinkwrap": null,
  "_spec": "db",
  "_where": "C:\\nodejs App\\app",
  "author": {
    "name": "Joe Hitchens",
    "email": "joe@sleepless.com",
    "url": "sleepless.com"
  },
  "bugs": {
    "url": "https://github.com/sleeplessinc/db/issues"
  },
  "dependencies": {
    "aws-sdk": "0.9.7-pre.8",
    "ds": "1.2.0",
    "mysql": "0.9.4",
    "redis": "0.6.7"
  },
  "description": "Easy access to dynamo, ds, mongodb, redis",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "620022e7aa4a0dc19f4f84d5da79e7096fe77d0e",
    "tarball": "https://registry.npmjs.org/db/-/db-1.0.6.tgz"
  },
  "homepage": "https://github.com/sleeplessinc/db#readme",
  "license": {
    "type": "MIT",
    "url": "https://github.com/sleeplessinc/db/raw/master/LICENSE"
  },
  "maintainers": [
    {
      "name": "sleeplessinc",
      "email": "joe@sleepless.com"
    }
  ],
  "name": "db",
  "optionalDependencies": {},
  "readme": "\nThis module sponsored by [Sleepless Inc. (sleepless.com)](http://sleepless.com/)\n\nThis will hopefully have a common interface for the\n\"least common denominator\" functions of each NoSQL db soon.\n\nTo support:\n\n\tAWS DynamoDB\n\tMongoDB\n\tJSON\n\tFilesystem\n\n\nInterfaces\n\n\tauthenticate( user, pass, callback() )\n\n\tcreate( data, callback( new_record_id ) )\n\n\tread( criteria, callback( records_matched[] )  )\n\n\tupdate( criteria, data, callback( num_updated ) )\n\n\tdelete( criteria, callback( num_deleted ) )\n\n\n\tExample:\n\n\t\tdb.authenticate( \"joe\", \"foo\", function( error, dbss ) {\n\t\t\tdbss.create( {name:\"bob\"}, function( error ) {\n\t\t\t\tdbss.read( { name: \"b.*\" }, function( error, records ) {\n\t\t\t\t\trecords.forEach( function( rec ) {\n\t\t\t\t\t\tprint( rec.name )\t// \"barbara\", \"bob\", \"bosworth\", etc.\n\t\t\t\t\t\tif( rec.name == \"bob\" ) {\n\t\t\t\t\t\t\trec.name = \"robert\"\n\t\t\t\t\t\t\tdbss.update( {id:rec.id}, rec, function( error ) {\n\t\t\t\t\t\t\t\tdbss.delete( {id:rec.id}, function( error ) {\n\t\t\t\t\t\t\t\t\tprint( \"robert rec deleted\" )\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\n\n\nAPI\n\tListTables\n\tCreateTable\n\tDescribeTable\n\tUpdateTable\n\tDeleteTable\n\tPutItem\n\tGetItem\n\tUpdateItem\n\tBatchGetItem\n\tDeleteItem\n\tQuery\n\tScan\n\n",
  "readmeFilename": "README",
  "repository": {
    "type": "git",
    "url": "git+https://sleeplessinc@github.com/sleeplessinc/db.git"
  },
  "version": "1.0.6"
}
